Proceso para los formularios externos:

en Views:

def getform(request):

    if request.method == 'POST':   -> Si el formulario ya está rellenado y se le da al submit.
        form = Yourname(request.POST)
        # check whether it's valid:
        if form.is_valid():
            return render(request, 'registrado.html', {'form': form.data}) # Form.data envía los datos SIN los campos, usando render.
            #return HttpResponseRedirect('registrado.html')

        # if a GET (or any other method) we'll create a blank form
    else:
        form = Yourname() -> Si se pide la página por primera vez (GET), generamos una variable form que enviar en un diccionario, basada en el formulario X.

    return render(request, 'registro.html', {'form':form})

En la web:

    Para rellenar datos:

        -<form action="getform" method="post"> -> En action va

            {% csrf_token %}
            {{ form }}

        <input type="submit" value="OK">

Para recibirlos:

<body>

{% block content %}

Registrado como {{ form.yourname }}, felicidades CRUCK

<br>

<a href="{% url 'getform' %} "> Aquí para volver a registro. </a> -> Esto es para volver a la página anterior. Ha de usarse la variable "name" en urls.py para referenciarlo.

{% endblock %}

Eximir de necesidad de CSRF:

@csrf_exempt delante del formulario